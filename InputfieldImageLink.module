<?php


class InputfieldImageLink extends Inputfield {

  public static function getModuleInfo () {
  
    return array (
        'title'     => __('Inputfield for ImageLink'      , __FILE__)  // Module Title
      , 'summary'   => __('Adds Inputfield for ImageLink' , __FILE__)  // Module Summary
      , 'version'   => 2
      , 'requires'  => array ('FieldtypeImageLink')
      , 'permanent' => false
    );
  }

  protected static $defaultConfig = array(
    'startpage' => 0
    ); 

  public function init() {

    foreach(self::$defaultConfig as $key => $value) {
      $this->set($key, $value);
    }
    $this->attr('value', $this->wire('pages')->newPageArray()); 

    parent::init();

    // not sure if all this is needed

    $this->set ('pathToCSS'           , '');
    $this->set ('resetCSS'            , '');
    $this->set ('renderLayout'        , '');
    $this->set ('pathToTemplates'     , '');
    $this->set ('collapseUnpublished' , '');
  }



  public function renderReady (Inputfield $parent = null , $renderValueMode = false) {

    static $loaded = false;

    if (! $loaded) {
      $this->wire('modules')->get ('JqueryCore'); // required by jQuery UI
      $this->wire('modules')->get ('JqueryUI');  
      $this->wire('modules')->get ('JqueryUI')->use ('modal');
      $this->modules->getInstall ('JqueryMagnific'); 
      $loaded = true;
    }
    
    $this->globalConfig (); 
    return parent::renderReady ($parent, $renderValueMode);
  } 


  protected function globalConfig () {

    $settings = array (
                  'pwimage' => array (
                       'selectLabel'  => $this->_('Select Image')
                     , 'editLabel'    => $this->_('Edit Image')
                     , 'captionLabel' => $this->_('Your caption text here')
                     , 'savingNote'   => $this->_('Saving Image')
                     , 'cancelBtn'    => $this->_('Cancel')
                     , 'insertBtn'    => $this->_('Insert Image')
                     , 'selectBtn'    => $this->_('Select Another')
                  )
    ); 

    $this->wire('config')->js ($this->className () , $settings); 
  }

  public function ___getConfigInputfields () {

    $inputfields = parent::___getConfigInputfields();

    // default image page
    $f = $this->modules->get('InputfieldPageListSelect'); 
    $f->attr('name', 'startpage'); 
    $f->label = $this->_('Default image page'); 
    $f->attr('value', (int) $this->startpage); 
    $f->description = $this->_('Select a default page for the image picker.'); 
    $f->notes = $this->_('When empty, the default page is the currently edited page'); 
    $f->required = false;
    $inputfields->add($f);

    return $inputfields; 
    }


    
 
  
  public function ___render() {

    $this->config->scripts->add ($this->config->urls->InputfieldImageLink . "InputfieldImageLink.js");

    $attrs = $this->getAttributes();
    $value = $attrs['value'];

    unset($attrs['value']);

    $out = sprintf (
               '<input value="%s" data-page-id="%s" type="hidden" %s />'
             , htmlspecialchars ($value)
             , $this->wire ('input')->get ('id')
             , $this->getAttributesString($attrs)
           );

    $button = $this->wire ('modules')->get ('InputfieldButton'); 
    $button->icon  = 'edit';
    $button->value = $this->_('Change'); 
    $button->addClass ('ImageLinkButtonEdit');
    $button->attr ('style' , 'margin-bottom:0.8em;'); 

    if ($this->startpage) {
      $button->attr ('data-startpage', $this->startpage);   
    }

    $out .= $button->render ();

    $button = $this->wire ('modules')->get ('InputfieldButton'); 
    $button->icon  = 'eraser';
    $button->value = $this->_('Remove'); 
    $button->addClass ('ImageLinkButtonErase'); 
    $button->attr ('style' , 'margin-bottom:0.8em;'); 

    $out .= $button->render ();

    return $out; 
  }
}

